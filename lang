#!/bin/sh
echo

assemblers="as clang nasm yasm" # gcc
languages="erl fscript gfortran 8g 6g ghc java lua perl php python python3 ruby macruby gem xcrun"
websystems="apachectl ant"
databases="mysql psql sqlite3"
versionsystems="cvs git hg svn"
other="xcodebuild"
shells="bash csh fish ksh tcsh zsh"

for language in $assemblers echo $languages echo $websystems echo $databases echo $versionsystems echo $shells $other
do
	if [ `which $language` ]
	then
		case $language in
			as         ) as -v < /dev/null 2>&1 | awk '{ print $5,$6,$8 }';;
			clang      ) clang --version 2>&1 | head -n 1 | awk '{ print "Clang",$4 }';;
			gcc        ) gcc --version | grep gcc | awk '{ print "GCC",$3 }';;
			nasm       ) nasm -v | awk '{ print $1,$2,$3 }';;
			yasm       ) yasm --version | grep yasm | grep -v Run | awk '{ print $1, $2 }';;
			erl        ) erl +V 2>&1 | awk '{ print $1, $6 }';;
			gfortran   ) gfortran --version | grep GCC | awk '{ print "GFortran",$4 }';;
			ghc        ) ghc --version | awk '{ print $4, $8 }';;
			8g         ) 8g -V | awk '{ print "Go",$3,"(32-bit)" }';;
			6g         ) 6g -V | awk '{ print "Go",$3,"(64-bit)" }';;
			java       ) java -fullversion 2>&1 | sed 's/full version //' | sed 's/\"//g' | sed 's/java/Java/';;
			lua        ) lua -e 'print( _VERSION )';;
			perl       ) perl -version | grep 'is perl' | awk '{ print "Perl",$4 }';;
			php        ) php -v | grep PHP | grep built | awk '{print $1,$2}';;
			python     ) python -V;;
			ruby       ) ruby -v | awk '{ print "Ruby",$2 }';;
			macruby    ) macruby -v | awk '{ print $1,$3,$4; }';;
			gem        ) gem -v | awk '{ print "Ruby Gem",$1 }';;
			fscript    ) echo; echo "F-Script:"; fscript -v;;
			xcrun      ) xcrun swift -v 2>&1 | grep Swift | awk '{ print $1, $3 }';;
			apachectl  ) apachectl -v | grep Apache | awk '{ print $3}' | sed 's/\// /';;
			ant        ) ant -version | awk '{ print $1,$2,$4 }';;
			rails      ) rails -v;;
			mysql      ) mysql --version | awk '{ print $1, $5 }';;
			psql       ) psql --version | grep -v contains | awk '{ print "PostgreSQL",$3 }';;
			sqlite3    ) sqlite3 --version | awk '{ print "SQLite",$1 }';;
			cvs        ) cvs --version | grep client | sed 's/ (client\/server)//' | sed 's/ (CVS)//';;
			git        ) git --version | awk '{print $1,$3}';;
			hg         ) hg --version | head -n 1 | awk '{ split( $0,a," " ); print a[1],a[5] }' | sed 's/)//';;
			svn        ) svn --version | grep 'svn, version' | sed 's/, version//' | sed 's/svn/Subversion/';;
			xcodebuild ) echo; xcodebuild -version | grep Xcode;;
			bash       ) bash --version | head -n 1 | awk '{ print "bash: ",$4 }';;
			csh        ) csh --version | awk '{ print " csh: ",$2 }';;
			fish       ) fish -v 2>&1 | awk '{ print "fish: ",$3 }';;
			ksh        ) ksh 'echo ${.sh.version}' | awk '{ print " ksh: ", $2, $3 }';;
			sh         ) sh --version | head -n 1 | awk '{ print "  sh: ", $2, $4 }';;
			tcsh       ) tcsh --version | awk '{ print "tcsh: ",$2 }';;
			zsh        ) zsh --version | awk '{ print " zsh: ",$2 }';;
			echo       ) echo;;
		esac
	fi
done
echo
